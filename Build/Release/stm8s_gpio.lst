                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_gpio
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _GPIO_Init
                                     12 	.globl _GPIO_WriteHigh
                                     13 	.globl _GPIO_WriteLow
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 
                                     27 ; default segment ordering for linker
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area CONST
                                     32 	.area INITIALIZER
                                     33 	.area CODE
                                     34 
                                     35 ;--------------------------------------------------------
                                     36 ; global & static initialisations
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area GSINIT
                                     42 ;--------------------------------------------------------
                                     43 ; Home
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area HOME
                                     47 ;--------------------------------------------------------
                                     48 ; code
                                     49 ;--------------------------------------------------------
                                     50 	.area CODE
                                     51 ;	Source/Std_Lib/Src/stm8s_gpio.c: 71: void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, GPIO_Mode_TypeDef GPIO_Mode)
                                     52 ;	-----------------------------------------
                                     53 ;	 function GPIO_Init
                                     54 ;	-----------------------------------------
      000000                         55 _GPIO_Init:
      000000 52 05            [ 2]   56 	sub	sp, #5
                                     57 ;	Source/Std_Lib/Src/stm8s_gpio.c: 81: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      000002 16 08            [ 2]   58 	ldw	y, (0x08, sp)
      000004 93               [ 1]   59 	ldw	x, y
      000005 1C 00 04         [ 2]   60 	addw	x, #0x0004
      000008 1F 01            [ 2]   61 	ldw	(0x01, sp), x
      00000A F6               [ 1]   62 	ld	a, (x)
      00000B 88               [ 1]   63 	push	a
      00000C 7B 0B            [ 1]   64 	ld	a, (0x0b, sp)
      00000E 43               [ 1]   65 	cpl	a
      00000F 6B 04            [ 1]   66 	ld	(0x04, sp), a
      000011 84               [ 1]   67 	pop	a
      000012 14 03            [ 1]   68 	and	a, (0x03, sp)
      000014 1E 01            [ 2]   69 	ldw	x, (0x01, sp)
      000016 F7               [ 1]   70 	ld	(x), a
                                     71 ;	Source/Std_Lib/Src/stm8s_gpio.c: 98: GPIOx->DDR |= (uint8_t)GPIO_Pin;
      000017 93               [ 1]   72 	ldw	x, y
      000018 5C               [ 1]   73 	incw	x
      000019 5C               [ 1]   74 	incw	x
      00001A 1F 04            [ 2]   75 	ldw	(0x04, sp), x
                                     76 ;	Source/Std_Lib/Src/stm8s_gpio.c: 87: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x80) != (uint8_t)0x00) /* Output mode */
      00001C 0D 0B            [ 1]   77 	tnz	(0x0b, sp)
      00001E 2A 1E            [ 1]   78 	jrpl	00105$
                                     79 ;	Source/Std_Lib/Src/stm8s_gpio.c: 91: GPIOx->ODR |= (uint8_t)GPIO_Pin;
      000020 90 F6            [ 1]   80 	ld	a, (y)
                                     81 ;	Source/Std_Lib/Src/stm8s_gpio.c: 89: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x10) != (uint8_t)0x00) /* High level */
      000022 88               [ 1]   82 	push	a
      000023 7B 0C            [ 1]   83 	ld	a, (0x0c, sp)
      000025 A5 10            [ 1]   84 	bcp	a, #0x10
      000027 84               [ 1]   85 	pop	a
      000028 27 06            [ 1]   86 	jreq	00102$
                                     87 ;	Source/Std_Lib/Src/stm8s_gpio.c: 91: GPIOx->ODR |= (uint8_t)GPIO_Pin;
      00002A 1A 0A            [ 1]   88 	or	a, (0x0a, sp)
      00002C 90 F7            [ 1]   89 	ld	(y), a
      00002E 20 04            [ 2]   90 	jra	00103$
      000030                         91 00102$:
                                     92 ;	Source/Std_Lib/Src/stm8s_gpio.c: 95: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
      000030 14 03            [ 1]   93 	and	a, (0x03, sp)
      000032 90 F7            [ 1]   94 	ld	(y), a
      000034                         95 00103$:
                                     96 ;	Source/Std_Lib/Src/stm8s_gpio.c: 98: GPIOx->DDR |= (uint8_t)GPIO_Pin;
      000034 1E 04            [ 2]   97 	ldw	x, (0x04, sp)
      000036 F6               [ 1]   98 	ld	a, (x)
      000037 1A 0A            [ 1]   99 	or	a, (0x0a, sp)
      000039 1E 04            [ 2]  100 	ldw	x, (0x04, sp)
      00003B F7               [ 1]  101 	ld	(x), a
      00003C 20 08            [ 2]  102 	jra	00106$
      00003E                        103 00105$:
                                    104 ;	Source/Std_Lib/Src/stm8s_gpio.c: 103: GPIOx->DDR &= (uint8_t)(~(GPIO_Pin));
      00003E 1E 04            [ 2]  105 	ldw	x, (0x04, sp)
      000040 F6               [ 1]  106 	ld	a, (x)
      000041 14 03            [ 1]  107 	and	a, (0x03, sp)
      000043 1E 04            [ 2]  108 	ldw	x, (0x04, sp)
      000045 F7               [ 1]  109 	ld	(x), a
      000046                        110 00106$:
                                    111 ;	Source/Std_Lib/Src/stm8s_gpio.c: 112: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      000046 93               [ 1]  112 	ldw	x, y
      000047 1C 00 03         [ 2]  113 	addw	x, #0x0003
      00004A F6               [ 1]  114 	ld	a, (x)
                                    115 ;	Source/Std_Lib/Src/stm8s_gpio.c: 110: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x40) != (uint8_t)0x00) /* Pull-Up or Push-Pull */
      00004B 88               [ 1]  116 	push	a
      00004C 7B 0C            [ 1]  117 	ld	a, (0x0c, sp)
      00004E A5 40            [ 1]  118 	bcp	a, #0x40
      000050 84               [ 1]  119 	pop	a
      000051 27 05            [ 1]  120 	jreq	00108$
                                    121 ;	Source/Std_Lib/Src/stm8s_gpio.c: 112: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      000053 1A 0A            [ 1]  122 	or	a, (0x0a, sp)
      000055 F7               [ 1]  123 	ld	(x), a
      000056 20 03            [ 2]  124 	jra	00109$
      000058                        125 00108$:
                                    126 ;	Source/Std_Lib/Src/stm8s_gpio.c: 116: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
      000058 14 03            [ 1]  127 	and	a, (0x03, sp)
      00005A F7               [ 1]  128 	ld	(x), a
      00005B                        129 00109$:
                                    130 ;	Source/Std_Lib/Src/stm8s_gpio.c: 81: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      00005B 1E 01            [ 2]  131 	ldw	x, (0x01, sp)
      00005D F6               [ 1]  132 	ld	a, (x)
                                    133 ;	Source/Std_Lib/Src/stm8s_gpio.c: 123: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x20) != (uint8_t)0x00) /* Interrupt or Slow slope */
      00005E 88               [ 1]  134 	push	a
      00005F 7B 0C            [ 1]  135 	ld	a, (0x0c, sp)
      000061 A5 20            [ 1]  136 	bcp	a, #0x20
      000063 84               [ 1]  137 	pop	a
      000064 27 07            [ 1]  138 	jreq	00111$
                                    139 ;	Source/Std_Lib/Src/stm8s_gpio.c: 125: GPIOx->CR2 |= (uint8_t)GPIO_Pin;
      000066 1A 0A            [ 1]  140 	or	a, (0x0a, sp)
      000068 1E 01            [ 2]  141 	ldw	x, (0x01, sp)
      00006A F7               [ 1]  142 	ld	(x), a
      00006B 20 05            [ 2]  143 	jra	00113$
      00006D                        144 00111$:
                                    145 ;	Source/Std_Lib/Src/stm8s_gpio.c: 129: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      00006D 14 03            [ 1]  146 	and	a, (0x03, sp)
      00006F 1E 01            [ 2]  147 	ldw	x, (0x01, sp)
      000071 F7               [ 1]  148 	ld	(x), a
      000072                        149 00113$:
                                    150 ;	Source/Std_Lib/Src/stm8s_gpio.c: 131: }
      000072 5B 05            [ 2]  151 	addw	sp, #5
      000074 81               [ 4]  152 	ret
                                    153 ;	Source/Std_Lib/Src/stm8s_gpio.c: 154: void GPIO_WriteHigh(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef PortPins)
                                    154 ;	-----------------------------------------
                                    155 ;	 function GPIO_WriteHigh
                                    156 ;	-----------------------------------------
      000075                        157 _GPIO_WriteHigh:
                                    158 ;	Source/Std_Lib/Src/stm8s_gpio.c: 156: GPIOx->ODR |= (uint8_t)PortPins;
      000075 1E 03            [ 2]  159 	ldw	x, (0x03, sp)
      000077 F6               [ 1]  160 	ld	a, (x)
      000078 1A 05            [ 1]  161 	or	a, (0x05, sp)
      00007A F7               [ 1]  162 	ld	(x), a
                                    163 ;	Source/Std_Lib/Src/stm8s_gpio.c: 157: }
      00007B 81               [ 4]  164 	ret
                                    165 ;	Source/Std_Lib/Src/stm8s_gpio.c: 167: void GPIO_WriteLow(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef PortPins)
                                    166 ;	-----------------------------------------
                                    167 ;	 function GPIO_WriteLow
                                    168 ;	-----------------------------------------
      00007C                        169 _GPIO_WriteLow:
      00007C 88               [ 1]  170 	push	a
                                    171 ;	Source/Std_Lib/Src/stm8s_gpio.c: 169: GPIOx->ODR &= (uint8_t)(~PortPins);
      00007D 1E 04            [ 2]  172 	ldw	x, (0x04, sp)
      00007F F6               [ 1]  173 	ld	a, (x)
      000080 6B 01            [ 1]  174 	ld	(0x01, sp), a
      000082 7B 06            [ 1]  175 	ld	a, (0x06, sp)
      000084 43               [ 1]  176 	cpl	a
      000085 14 01            [ 1]  177 	and	a, (0x01, sp)
      000087 F7               [ 1]  178 	ld	(x), a
                                    179 ;	Source/Std_Lib/Src/stm8s_gpio.c: 170: }
      000088 84               [ 1]  180 	pop	a
      000089 81               [ 4]  181 	ret
                                    182 	.area CODE
                                    183 	.area CONST
                                    184 	.area INITIALIZER
                                    185 	.area CABS (ABS)
