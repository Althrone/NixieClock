                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _EXTI_PORTD_IRQHandler
                                     12 	.globl _EXTI_PORTC_IRQHandler
                                     13 	.globl _EXTI_PORTA_IRQHandler
                                     14 	.globl _TIM4_UPD_OVF_IRQHandler
                                     15 	.globl _main
                                     16 	.globl _DS3231_GetTime
                                     17 	.globl _DS3231_Init
                                     18 	.globl _NIXIE_DisplayTime
                                     19 	.globl _NIXIE_Init
                                     20 	.globl _GPS_Init
                                     21 	.globl _TIM4_ClearITPendingBit
                                     22 	.globl _TIM4_GetITStatus
                                     23 	.globl _TIM4_ARRPreloadConfig
                                     24 	.globl _TIM4_ITConfig
                                     25 	.globl _TIM4_Cmd
                                     26 	.globl _TIM4_TimeBaseInit
                                     27 	.globl _ITC_SetSoftwarePriority
                                     28 	.globl _GPIO_ReadInputPin
                                     29 	.globl _GPIO_Init
                                     30 	.globl _EXTI_SetExtIntSensitivity
                                     31 	.globl _CLK_ClockSwitchConfig
                                     32 	.globl _CLK_HSECmd
                                     33 	.globl _KEY_StateMachine_Enumeration
                                     34 	.globl _ir_always_on
                                     35 	.globl _key_delay_2s
                                     36 	.globl _ir_double_click_delay
                                     37 	.globl _ir_delay
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DATA
      000000                         42 _ir_delay::
      000000                         43 	.ds 2
      000002                         44 _ir_double_click_delay::
      000002                         45 	.ds 1
      000003                         46 _key_delay_2s::
      000003                         47 	.ds 2
                                     48 ;--------------------------------------------------------
                                     49 ; ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area INITIALIZED
      000000                         52 _ir_always_on::
      000000                         53 	.ds 1
      000001                         54 _KEY_StateMachine_Enumeration::
      000001                         55 	.ds 1
                                     56 ;--------------------------------------------------------
                                     57 ; Stack segment in internal ram 
                                     58 ;--------------------------------------------------------
                                     59 	.area	SSEG
      000000                         60 __start__stack:
      000000                         61 	.ds	1
                                     62 
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area DABS (ABS)
                                     67 
                                     68 ; default segment ordering for linker
                                     69 	.area HOME
                                     70 	.area GSINIT
                                     71 	.area GSFINAL
                                     72 	.area CONST
                                     73 	.area INITIALIZER
                                     74 	.area CODE
                                     75 
                                     76 ;--------------------------------------------------------
                                     77 ; interrupt vector 
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME
      000000                         80 __interrupt_vect:
      000000 82v00u00u00             81 	int s_GSINIT ; reset
      000004 82 00 00 00             82 	int 0x000000 ; trap
      000008 82 00 00 00             83 	int 0x000000 ; int0
      00000C 82 00 00 00             84 	int 0x000000 ; int1
      000010 82 00 00 00             85 	int 0x000000 ; int2
      000014 82v00u01u05             86 	int _EXTI_PORTA_IRQHandler ; int3
      000018 82 00 00 00             87 	int 0x000000 ; int4
      00001C 82v00u01u06             88 	int _EXTI_PORTC_IRQHandler ; int5
      000020 82v00u01u32             89 	int _EXTI_PORTD_IRQHandler ; int6
      000024 82 00 00 00             90 	int 0x000000 ; int7
      000028 82 00 00 00             91 	int 0x000000 ; int8
      00002C 82 00 00 00             92 	int 0x000000 ; int9
      000030 82 00 00 00             93 	int 0x000000 ; int10
      000034 82 00 00 00             94 	int 0x000000 ; int11
      000038 82 00 00 00             95 	int 0x000000 ; int12
      00003C 82 00 00 00             96 	int 0x000000 ; int13
      000040 82 00 00 00             97 	int 0x000000 ; int14
      000044 82 00 00 00             98 	int 0x000000 ; int15
      000048 82 00 00 00             99 	int 0x000000 ; int16
      00004C 82 00 00 00            100 	int 0x000000 ; int17
      000050 82v00u00u00            101 	int _UART1_RX_IRQHandler ; int18
      000054 82 00 00 00            102 	int 0x000000 ; int19
      000058 82 00 00 00            103 	int 0x000000 ; int20
      00005C 82 00 00 00            104 	int 0x000000 ; int21
      000060 82 00 00 00            105 	int 0x000000 ; int22
      000064 82v00u00uD1            106 	int _TIM4_UPD_OVF_IRQHandler ; int23
                                    107 ;--------------------------------------------------------
                                    108 ; global & static initialisations
                                    109 ;--------------------------------------------------------
                                    110 	.area HOME
                                    111 	.area GSINIT
                                    112 	.area GSFINAL
                                    113 	.area GSINIT
      000000                        114 __sdcc_gs_init_startup:
      000000                        115 __sdcc_init_data:
                                    116 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  117 	ldw x, #l_DATA
      000003 27 07            [ 1]  118 	jreq	00002$
      000005                        119 00001$:
      000005 72 4FuFFuFF      [ 1]  120 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  121 	decw x
      00000A 26 F9            [ 1]  122 	jrne	00001$
      00000C                        123 00002$:
      00000C AEr00r00         [ 2]  124 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  125 	jreq	00004$
      000011                        126 00003$:
      000011 D6uFFuFF         [ 1]  127 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  128 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  129 	decw	x
      000018 26 F7            [ 1]  130 	jrne	00003$
      00001A                        131 00004$:
                                    132 ; stm8_genXINIT() end
                                    133 	.area GSFINAL
      000000 CCr00r68         [ 2]  134 	jp	__sdcc_program_startup
                                    135 ;--------------------------------------------------------
                                    136 ; Home
                                    137 ;--------------------------------------------------------
                                    138 	.area HOME
                                    139 	.area HOME
      000068                        140 __sdcc_program_startup:
      000068 CCr00r00         [ 2]  141 	jp	_main
                                    142 ;	return from main will return to caller
                                    143 ;--------------------------------------------------------
                                    144 ; code
                                    145 ;--------------------------------------------------------
                                    146 	.area CODE
                                    147 ;	Source/User/main.c: 15: int main(void)
                                    148 ;	-----------------------------------------
                                    149 ;	 function main
                                    150 ;	-----------------------------------------
      000000                        151 _main:
      000000 52 03            [ 2]  152 	sub	sp, #3
                                    153 ;	Source/User/main.c: 18: CLK_HSECmd(ENABLE);
      000002 4B 01            [ 1]  154 	push	#0x01
      000004 CDr00r00         [ 4]  155 	call	_CLK_HSECmd
      000007 84               [ 1]  156 	pop	a
                                    157 ;	Source/User/main.c: 19: CLK_ClockSwitchConfig(CLK_SWITCHMODE_AUTO,CLK_SOURCE_HSE,DISABLE,CLK_CURRENTCLOCKSTATE_DISABLE);//8MHz
      000008 4B 00            [ 1]  158 	push	#0x00
      00000A 4B 00            [ 1]  159 	push	#0x00
      00000C 4B B4            [ 1]  160 	push	#0xb4
      00000E 4B 01            [ 1]  161 	push	#0x01
      000010 CDr00r00         [ 4]  162 	call	_CLK_ClockSwitchConfig
      000013 5B 04            [ 2]  163 	addw	sp, #4
                                    164 ;	Source/User/main.c: 22: ITC_SetSoftwarePriority(ITC_IRQ_PORTD,ITC_PRIORITYLEVEL_1);
      000015 4B 01            [ 1]  165 	push	#0x01
      000017 4B 06            [ 1]  166 	push	#0x06
      000019 CDr00r00         [ 4]  167 	call	_ITC_SetSoftwarePriority
      00001C 85               [ 2]  168 	popw	x
                                    169 ;	Source/User/main.c: 23: EXTI_SetExtIntSensitivity(EXTI_PORT_GPIOD,EXTI_SENSITIVITY_FALL_ONLY);
      00001D 4B 02            [ 1]  170 	push	#0x02
      00001F 4B 03            [ 1]  171 	push	#0x03
      000021 CDr00r00         [ 4]  172 	call	_EXTI_SetExtIntSensitivity
      000024 85               [ 2]  173 	popw	x
                                    174 ;	Source/User/main.c: 24: GPIO_Init(GPIOD,GPIO_PIN_2,GPIO_MODE_IN_FL_IT);
      000025 4B 20            [ 1]  175 	push	#0x20
      000027 4B 04            [ 1]  176 	push	#0x04
      000029 4B 0F            [ 1]  177 	push	#0x0f
      00002B 4B 50            [ 1]  178 	push	#0x50
      00002D CDr00r00         [ 4]  179 	call	_GPIO_Init
      000030 5B 04            [ 2]  180 	addw	sp, #4
                                    181 ;	Source/User/main.c: 27: GPIO_Init(GPIOC,GPIO_PIN_3,GPIO_MODE_IN_PU_IT);//GPIO_PIN_3
      000032 4B 60            [ 1]  182 	push	#0x60
      000034 4B 08            [ 1]  183 	push	#0x08
      000036 4B 0A            [ 1]  184 	push	#0x0a
      000038 4B 50            [ 1]  185 	push	#0x50
      00003A CDr00r00         [ 4]  186 	call	_GPIO_Init
      00003D 5B 04            [ 2]  187 	addw	sp, #4
                                    188 ;	Source/User/main.c: 28: EXTI_SetExtIntSensitivity(EXTI_PORT_GPIOC,EXTI_SENSITIVITY_FALL_ONLY);
      00003F 4B 02            [ 1]  189 	push	#0x02
      000041 4B 02            [ 1]  190 	push	#0x02
      000043 CDr00r00         [ 4]  191 	call	_EXTI_SetExtIntSensitivity
      000046 85               [ 2]  192 	popw	x
                                    193 ;	Source/User/main.c: 29: rim();
      000047 9A               [ 1]  194 	rim
                                    195 ;	Source/User/main.c: 31: GPS_Init();//PD5 PD6
      000048 CDr00r00         [ 4]  196 	call	_GPS_Init
                                    197 ;	Source/User/main.c: 33: NIXIE_Init();//PC5 PC6 PC7
      00004B CDr00r00         [ 4]  198 	call	_NIXIE_Init
                                    199 ;	Source/User/main.c: 35: for(uint8_t i=0;i<10;++i)
      00004E 0F 01            [ 1]  200 	clr	(0x01, sp)
      000050                        201 00114$:
      000050 7B 01            [ 1]  202 	ld	a, (0x01, sp)
      000052 A1 0A            [ 1]  203 	cp	a, #0x0a
      000054 24 37            [ 1]  204 	jrnc	00103$
                                    205 ;	Source/User/main.c: 37: tube_state=ENABLE;
      000056 35 01u00u00      [ 1]  206 	mov	_tube_state+0, #0x01
                                    207 ;	Source/User/main.c: 38: NIXIE_DisplayTime(i*10+i,i*10+i);
      00005A 7B 01            [ 1]  208 	ld	a, (0x01, sp)
      00005C 97               [ 1]  209 	ld	xl, a
      00005D A6 0A            [ 1]  210 	ld	a, #0x0a
      00005F 42               [ 4]  211 	mul	x, a
      000060 7B 01            [ 1]  212 	ld	a, (0x01, sp)
      000062 89               [ 2]  213 	pushw	x
      000063 1B 02            [ 1]  214 	add	a, (2, sp)
      000065 85               [ 2]  215 	popw	x
      000066 88               [ 1]  216 	push	a
      000067 88               [ 1]  217 	push	a
      000068 CDr00r00         [ 4]  218 	call	_NIXIE_DisplayTime
      00006B 85               [ 2]  219 	popw	x
                                    220 ;	Source/User/main.c: 39: for(uint16_t k=0;k<100;++k)
      00006C 5F               [ 1]  221 	clrw	x
      00006D 1F 02            [ 2]  222 	ldw	(0x02, sp), x
      00006F                        223 00111$:
      00006F 1E 02            [ 2]  224 	ldw	x, (0x02, sp)
      000071 A3 00 64         [ 2]  225 	cpw	x, #0x0064
      000074 24 13            [ 1]  226 	jrnc	00115$
                                    227 ;	Source/User/main.c: 41: for(uint16_t j=0;j<1000;++j);
      000076 5F               [ 1]  228 	clrw	x
      000077                        229 00108$:
      000077 90 93            [ 1]  230 	ldw	y, x
      000079 90 A3 03 E8      [ 2]  231 	cpw	y, #0x03e8
      00007D 24 03            [ 1]  232 	jrnc	00112$
      00007F 5C               [ 1]  233 	incw	x
      000080 20 F5            [ 2]  234 	jra	00108$
      000082                        235 00112$:
                                    236 ;	Source/User/main.c: 39: for(uint16_t k=0;k<100;++k)
      000082 1E 02            [ 2]  237 	ldw	x, (0x02, sp)
      000084 5C               [ 1]  238 	incw	x
      000085 1F 02            [ 2]  239 	ldw	(0x02, sp), x
      000087 20 E6            [ 2]  240 	jra	00111$
      000089                        241 00115$:
                                    242 ;	Source/User/main.c: 35: for(uint8_t i=0;i<10;++i)
      000089 0C 01            [ 1]  243 	inc	(0x01, sp)
      00008B 20 C3            [ 2]  244 	jra	00114$
      00008D                        245 00103$:
                                    246 ;	Source/User/main.c: 44: ir_delay=DELAY_10S;
      00008D AE 09 C4         [ 2]  247 	ldw	x, #0x09c4
      000090 CFu00u00         [ 2]  248 	ldw	_ir_delay+0, x
                                    249 ;	Source/User/main.c: 46: DS3231_Init();
      000093 CDr00r00         [ 4]  250 	call	_DS3231_Init
                                    251 ;	Source/User/main.c: 49: TIM4_TimeBaseInit(TIM4_PRESCALER_128,250);//4ms
      000096 4B FA            [ 1]  252 	push	#0xfa
      000098 4B 07            [ 1]  253 	push	#0x07
      00009A CDr00r00         [ 4]  254 	call	_TIM4_TimeBaseInit
      00009D 85               [ 2]  255 	popw	x
                                    256 ;	Source/User/main.c: 50: TIM4_ITConfig(TIM4_IT_UPDATE,ENABLE);
      00009E 4B 01            [ 1]  257 	push	#0x01
      0000A0 4B 01            [ 1]  258 	push	#0x01
      0000A2 CDr00r00         [ 4]  259 	call	_TIM4_ITConfig
      0000A5 85               [ 2]  260 	popw	x
                                    261 ;	Source/User/main.c: 51: TIM4_ARRPreloadConfig(ENABLE);
      0000A6 4B 01            [ 1]  262 	push	#0x01
      0000A8 CDr00r00         [ 4]  263 	call	_TIM4_ARRPreloadConfig
      0000AB 84               [ 1]  264 	pop	a
                                    265 ;	Source/User/main.c: 52: ITC_SetSoftwarePriority(ITC_IRQ_TIM4_OVF,ITC_PRIORITYLEVEL_1);
      0000AC 4B 01            [ 1]  266 	push	#0x01
      0000AE 4B 17            [ 1]  267 	push	#0x17
      0000B0 CDr00r00         [ 4]  268 	call	_ITC_SetSoftwarePriority
      0000B3 85               [ 2]  269 	popw	x
                                    270 ;	Source/User/main.c: 53: TIM4_Cmd(ENABLE);
      0000B4 4B 01            [ 1]  271 	push	#0x01
      0000B6 CDr00r00         [ 4]  272 	call	_TIM4_Cmd
      0000B9 84               [ 1]  273 	pop	a
                                    274 ;	Source/User/main.c: 55: while(1)
      0000BA                        275 00105$:
                                    276 ;	Source/User/main.c: 58: NIXIE_DisplayTime(GPS_TimeDataSturcture.hour,GPS_TimeDataSturcture.min);
      0000BA C6u00u13         [ 1]  277 	ld	a, _GPS_TimeDataSturcture+19
      0000BD 97               [ 1]  278 	ld	xl, a
      0000BE C6u00u12         [ 1]  279 	ld	a, _GPS_TimeDataSturcture+18
      0000C1 89               [ 2]  280 	pushw	x
      0000C2 5B 01            [ 2]  281 	addw	sp, #1
      0000C4 88               [ 1]  282 	push	a
      0000C5 CDr00r00         [ 4]  283 	call	_NIXIE_DisplayTime
      0000C8 85               [ 2]  284 	popw	x
                                    285 ;	Source/User/main.c: 60: DS3231_GetTime();
      0000C9 CDr00r00         [ 4]  286 	call	_DS3231_GetTime
      0000CC 20 EC            [ 2]  287 	jra	00105$
                                    288 ;	Source/User/main.c: 63: }
      0000CE 5B 03            [ 2]  289 	addw	sp, #3
      0000D0 81               [ 4]  290 	ret
                                    291 ;	Source/User/main.c: 72: void TIM4_UPD_OVF_IRQHandler(void) __interrupt(23)
                                    292 ;	-----------------------------------------
                                    293 ;	 function TIM4_UPD_OVF_IRQHandler
                                    294 ;	-----------------------------------------
      0000D1                        295 _TIM4_UPD_OVF_IRQHandler:
      0000D1 62               [ 2]  296 	div	x, a
                                    297 ;	Source/User/main.c: 75: if(TIM4_GetITStatus(TIM4_IT_UPDATE)==SET)
      0000D2 4B 01            [ 1]  298 	push	#0x01
      0000D4 CDr00r00         [ 4]  299 	call	_TIM4_GetITStatus
      0000D7 5B 01            [ 2]  300 	addw	sp, #1
      0000D9 4A               [ 1]  301 	dec	a
      0000DA 26 28            [ 1]  302 	jrne	00110$
                                    303 ;	Source/User/main.c: 86: if(ir_double_click_delay>0)//双击计时
      0000DC 72 5Du00u02      [ 1]  304 	tnz	_ir_double_click_delay+0
      0000E0 27 04            [ 1]  305 	jreq	00102$
                                    306 ;	Source/User/main.c: 87: --ir_double_click_delay;
      0000E2 72 5Au00u02      [ 1]  307 	dec	_ir_double_click_delay+0
      0000E6                        308 00102$:
                                    309 ;	Source/User/main.c: 93: if(ir_delay>0)
                                    310 ;	Source/User/main.c: 94: --ir_delay;
      0000E6 CEu00u00         [ 2]  311 	ldw	x, _ir_delay+0
      0000E9 27 04            [ 1]  312 	jreq	00104$
      0000EB 5A               [ 2]  313 	decw	x
      0000EC CFu00u00         [ 2]  314 	ldw	_ir_delay+0, x
      0000EF                        315 00104$:
                                    316 ;	Source/User/main.c: 95: if((ir_delay==0)&&(ir_always_on==RESET))
      0000EF CEu00u00         [ 2]  317 	ldw	x, _ir_delay+0
      0000F2 26 0A            [ 1]  318 	jrne	00106$
      0000F4 72 5Du00u00      [ 1]  319 	tnz	_ir_always_on+0
      0000F8 26 04            [ 1]  320 	jrne	00106$
                                    321 ;	Source/User/main.c: 98: tube_state=DISABLE;
      0000FA 72 5Fu00u00      [ 1]  322 	clr	_tube_state+0
      0000FE                        323 00106$:
                                    324 ;	Source/User/main.c: 101: TIM4_ClearITPendingBit(TIM4_IT_UPDATE);
      0000FE 4B 01            [ 1]  325 	push	#0x01
      000100 CDr00r00         [ 4]  326 	call	_TIM4_ClearITPendingBit
      000103 84               [ 1]  327 	pop	a
      000104                        328 00110$:
                                    329 ;	Source/User/main.c: 103: }
      000104 80               [11]  330 	iret
                                    331 ;	Source/User/main.c: 110: void EXTI_PORTA_IRQHandler(void) __interrupt(3)
                                    332 ;	-----------------------------------------
                                    333 ;	 function EXTI_PORTA_IRQHandler
                                    334 ;	-----------------------------------------
      000105                        335 _EXTI_PORTA_IRQHandler:
                                    336 ;	Source/User/main.c: 159: }
      000105 80               [11]  337 	iret
                                    338 ;	Source/User/main.c: 166: void EXTI_PORTC_IRQHandler(void) __interrupt(5)
                                    339 ;	-----------------------------------------
                                    340 ;	 function EXTI_PORTC_IRQHandler
                                    341 ;	-----------------------------------------
      000106                        342 _EXTI_PORTC_IRQHandler:
      000106 62               [ 2]  343 	div	x, a
                                    344 ;	Source/User/main.c: 168: if(GPIO_ReadInputPin(GPIOC,GPIO_PIN_3)==RESET)
      000107 4B 08            [ 1]  345 	push	#0x08
      000109 4B 0A            [ 1]  346 	push	#0x0a
      00010B 4B 50            [ 1]  347 	push	#0x50
      00010D CDr00r00         [ 4]  348 	call	_GPIO_ReadInputPin
      000110 5B 03            [ 2]  349 	addw	sp, #3
      000112 4D               [ 1]  350 	tnz	a
      000113 26 08            [ 1]  351 	jrne	00104$
                                    352 ;	Source/User/main.c: 171: key_delay_2s=DELAY_2S;
      000115 AE 01 F4         [ 2]  353 	ldw	x, #0x01f4
      000118 CFu00u03         [ 2]  354 	ldw	_key_delay_2s+0, x
      00011B 20 14            [ 2]  355 	jra	00106$
      00011D                        356 00104$:
                                    357 ;	Source/User/main.c: 173: else if(GPIO_ReadInputPin(GPIOC,GPIO_PIN_4)==RESET)
      00011D 4B 10            [ 1]  358 	push	#0x10
      00011F 4B 0A            [ 1]  359 	push	#0x0a
      000121 4B 50            [ 1]  360 	push	#0x50
      000123 CDr00r00         [ 4]  361 	call	_GPIO_ReadInputPin
      000126 5B 03            [ 2]  362 	addw	sp, #3
      000128 4D               [ 1]  363 	tnz	a
      000129 26 06            [ 1]  364 	jrne	00106$
                                    365 ;	Source/User/main.c: 176: key_delay_2s=DELAY_2S;
      00012B AE 01 F4         [ 2]  366 	ldw	x, #0x01f4
      00012E CFu00u03         [ 2]  367 	ldw	_key_delay_2s+0, x
      000131                        368 00106$:
                                    369 ;	Source/User/main.c: 178: }
      000131 80               [11]  370 	iret
                                    371 ;	Source/User/main.c: 185: void EXTI_PORTD_IRQHandler(void) __interrupt(6)
                                    372 ;	-----------------------------------------
                                    373 ;	 function EXTI_PORTD_IRQHandler
                                    374 ;	-----------------------------------------
      000132                        375 _EXTI_PORTD_IRQHandler:
      000132 62               [ 2]  376 	div	x, a
                                    377 ;	Source/User/main.c: 187: if(GPIO_ReadInputPin(GPIOD,GPIO_PIN_2)==RESET)
      000133 4B 04            [ 1]  378 	push	#0x04
      000135 4B 0F            [ 1]  379 	push	#0x0f
      000137 4B 50            [ 1]  380 	push	#0x50
      000139 CDr00r00         [ 4]  381 	call	_GPIO_ReadInputPin
      00013C 5B 03            [ 2]  382 	addw	sp, #3
      00013E 4D               [ 1]  383 	tnz	a
      00013F 26 20            [ 1]  384 	jrne	00107$
                                    385 ;	Source/User/main.c: 190: tube_state=ENABLE;
      000141 35 01u00u00      [ 1]  386 	mov	_tube_state+0, #0x01
                                    387 ;	Source/User/main.c: 192: ir_delay=DELAY_10S;
      000145 AE 09 C4         [ 2]  388 	ldw	x, #0x09c4
      000148 CFu00u00         [ 2]  389 	ldw	_ir_delay+0, x
                                    390 ;	Source/User/main.c: 193: if(ir_double_click_delay>0)//相当于20ms内又触发了红外
      00014B 72 5Du00u02      [ 1]  391 	tnz	_ir_double_click_delay+0
      00014F 27 0A            [ 1]  392 	jreq	00102$
                                    393 ;	Source/User/main.c: 195: ir_always_on=~ir_always_on;
      000151 72 53u00u00      [ 1]  394 	cpl	_ir_always_on+0
                                    395 ;	Source/User/main.c: 196: ir_double_click_delay=0;
      000155 72 5Fu00u02      [ 1]  396 	clr	_ir_double_click_delay+0
      000159 20 11            [ 2]  397 	jra	00109$
      00015B                        398 00102$:
                                    399 ;	Source/User/main.c: 199: ir_double_click_delay=DELAY_2S;
      00015B 35 F4u00u02      [ 1]  400 	mov	_ir_double_click_delay+0, #0xf4
      00015F 20 0B            [ 2]  401 	jra	00109$
      000161                        402 00107$:
                                    403 ;	Source/User/main.c: 201: else if(GPIO_ReadInputPin(GPIOD,GPIO_PIN_3)==RESET)//key1
      000161 4B 08            [ 1]  404 	push	#0x08
      000163 4B 0F            [ 1]  405 	push	#0x0f
      000165 4B 50            [ 1]  406 	push	#0x50
      000167 CDr00r00         [ 4]  407 	call	_GPIO_ReadInputPin
      00016A 5B 03            [ 2]  408 	addw	sp, #3
      00016C                        409 00109$:
                                    410 ;	Source/User/main.c: 228: }
      00016C 80               [11]  411 	iret
                                    412 	.area CODE
                                    413 	.area CONST
                                    414 	.area INITIALIZER
      000000                        415 __xinit__ir_always_on:
      000000 00                     416 	.db #0x00	; 0
      000001                        417 __xinit__KEY_StateMachine_Enumeration:
      000001 00                     418 	.db #0x00	; 0
                                    419 	.area CABS (ABS)
