                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _EXTI_PORTD_IRQHandler
                                     12 	.globl _EXTI_PORTC_IRQHandler
                                     13 	.globl _EXTI_PORTA_IRQHandler
                                     14 	.globl _TIM4_UPD_OVF_IRQHandler
                                     15 	.globl _main
                                     16 	.globl _DS3231_GetTime
                                     17 	.globl _DS3231_Init
                                     18 	.globl _NIXIE_DisplayTime
                                     19 	.globl _NIXIE_Init
                                     20 	.globl _GPS_Init
                                     21 	.globl _TIM4_ClearITPendingBit
                                     22 	.globl _TIM4_GetITStatus
                                     23 	.globl _TIM4_ARRPreloadConfig
                                     24 	.globl _TIM4_ITConfig
                                     25 	.globl _TIM4_Cmd
                                     26 	.globl _TIM4_TimeBaseInit
                                     27 	.globl _ITC_SetSoftwarePriority
                                     28 	.globl _GPIO_ReadInputPin
                                     29 	.globl _GPIO_Init
                                     30 	.globl _EXTI_SetExtIntSensitivity
                                     31 	.globl _CLK_ClockSwitchConfig
                                     32 	.globl _CLK_HSECmd
                                     33 	.globl _KEY_StateMachine_Enumeration
                                     34 	.globl _nixie_always_on
                                     35 	.globl _key_delay_2s
                                     36 	.globl _ir_double_click_delay
                                     37 	.globl _ir_delay
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DATA
      000000                         42 _ir_delay::
      000000                         43 	.ds 2
      000002                         44 _ir_double_click_delay::
      000002                         45 	.ds 1
      000003                         46 _key_delay_2s::
      000003                         47 	.ds 2
                                     48 ;--------------------------------------------------------
                                     49 ; ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area INITIALIZED
      000000                         52 _nixie_always_on::
      000000                         53 	.ds 1
      000001                         54 _KEY_StateMachine_Enumeration::
      000001                         55 	.ds 1
                                     56 ;--------------------------------------------------------
                                     57 ; Stack segment in internal ram 
                                     58 ;--------------------------------------------------------
                                     59 	.area	SSEG
      000000                         60 __start__stack:
      000000                         61 	.ds	1
                                     62 
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area DABS (ABS)
                                     67 
                                     68 ; default segment ordering for linker
                                     69 	.area HOME
                                     70 	.area GSINIT
                                     71 	.area GSFINAL
                                     72 	.area CONST
                                     73 	.area INITIALIZER
                                     74 	.area CODE
                                     75 
                                     76 ;--------------------------------------------------------
                                     77 ; interrupt vector 
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME
      000000                         80 __interrupt_vect:
      000000 82v00u00u00             81 	int s_GSINIT ; reset
      000004 82 00 00 00             82 	int 0x000000 ; trap
      000008 82 00 00 00             83 	int 0x000000 ; int0
      00000C 82 00 00 00             84 	int 0x000000 ; int1
      000010 82 00 00 00             85 	int 0x000000 ; int2
      000014 82v00u00uE9             86 	int _EXTI_PORTA_IRQHandler ; int3
      000018 82 00 00 00             87 	int 0x000000 ; int4
      00001C 82v00u00uEA             88 	int _EXTI_PORTC_IRQHandler ; int5
      000020 82v00u01u16             89 	int _EXTI_PORTD_IRQHandler ; int6
      000024 82 00 00 00             90 	int 0x000000 ; int7
      000028 82 00 00 00             91 	int 0x000000 ; int8
      00002C 82 00 00 00             92 	int 0x000000 ; int9
      000030 82 00 00 00             93 	int 0x000000 ; int10
      000034 82 00 00 00             94 	int 0x000000 ; int11
      000038 82 00 00 00             95 	int 0x000000 ; int12
      00003C 82 00 00 00             96 	int 0x000000 ; int13
      000040 82 00 00 00             97 	int 0x000000 ; int14
      000044 82 00 00 00             98 	int 0x000000 ; int15
      000048 82 00 00 00             99 	int 0x000000 ; int16
      00004C 82 00 00 00            100 	int 0x000000 ; int17
      000050 82v00u00u00            101 	int _UART1_RX_IRQHandler ; int18
      000054 82 00 00 00            102 	int 0x000000 ; int19
      000058 82 00 00 00            103 	int 0x000000 ; int20
      00005C 82 00 00 00            104 	int 0x000000 ; int21
      000060 82 00 00 00            105 	int 0x000000 ; int22
      000064 82v00u00uB1            106 	int _TIM4_UPD_OVF_IRQHandler ; int23
                                    107 ;--------------------------------------------------------
                                    108 ; global & static initialisations
                                    109 ;--------------------------------------------------------
                                    110 	.area HOME
                                    111 	.area GSINIT
                                    112 	.area GSFINAL
                                    113 	.area GSINIT
      000000                        114 __sdcc_gs_init_startup:
      000000                        115 __sdcc_init_data:
                                    116 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  117 	ldw x, #l_DATA
      000003 27 07            [ 1]  118 	jreq	00002$
      000005                        119 00001$:
      000005 72 4FuFFuFF      [ 1]  120 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  121 	decw x
      00000A 26 F9            [ 1]  122 	jrne	00001$
      00000C                        123 00002$:
      00000C AEr00r00         [ 2]  124 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  125 	jreq	00004$
      000011                        126 00003$:
      000011 D6uFFuFF         [ 1]  127 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  128 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  129 	decw	x
      000018 26 F7            [ 1]  130 	jrne	00003$
      00001A                        131 00004$:
                                    132 ; stm8_genXINIT() end
                                    133 	.area GSFINAL
      000000 CCr00r68         [ 2]  134 	jp	__sdcc_program_startup
                                    135 ;--------------------------------------------------------
                                    136 ; Home
                                    137 ;--------------------------------------------------------
                                    138 	.area HOME
                                    139 	.area HOME
      000068                        140 __sdcc_program_startup:
      000068 CCr00r00         [ 2]  141 	jp	_main
                                    142 ;	return from main will return to caller
                                    143 ;--------------------------------------------------------
                                    144 ; code
                                    145 ;--------------------------------------------------------
                                    146 	.area CODE
                                    147 ;	Source/User/main.c: 32: int main(void)
                                    148 ;	-----------------------------------------
                                    149 ;	 function main
                                    150 ;	-----------------------------------------
      000000                        151 _main:
      000000 89               [ 2]  152 	pushw	x
                                    153 ;	Source/User/main.c: 35: CLK_HSECmd(ENABLE);
      000001 4B 01            [ 1]  154 	push	#0x01
      000003 CDr00r00         [ 4]  155 	call	_CLK_HSECmd
      000006 84               [ 1]  156 	pop	a
                                    157 ;	Source/User/main.c: 36: CLK_ClockSwitchConfig(CLK_SWITCHMODE_AUTO,CLK_SOURCE_HSE,DISABLE,CLK_CURRENTCLOCKSTATE_DISABLE);//8MHz
      000007 4B 00            [ 1]  158 	push	#0x00
      000009 4B 00            [ 1]  159 	push	#0x00
      00000B 4B B4            [ 1]  160 	push	#0xb4
      00000D 4B 01            [ 1]  161 	push	#0x01
      00000F CDr00r00         [ 4]  162 	call	_CLK_ClockSwitchConfig
      000012 5B 04            [ 2]  163 	addw	sp, #4
                                    164 ;	Source/User/main.c: 39: ITC_SetSoftwarePriority(ITC_IRQ_PORTD,ITC_PRIORITYLEVEL_1);
      000014 4B 01            [ 1]  165 	push	#0x01
      000016 4B 06            [ 1]  166 	push	#0x06
      000018 CDr00r00         [ 4]  167 	call	_ITC_SetSoftwarePriority
      00001B 85               [ 2]  168 	popw	x
                                    169 ;	Source/User/main.c: 40: EXTI_SetExtIntSensitivity(EXTI_PORT_GPIOD,EXTI_SENSITIVITY_FALL_ONLY);
      00001C 4B 02            [ 1]  170 	push	#0x02
      00001E 4B 03            [ 1]  171 	push	#0x03
      000020 CDr00r00         [ 4]  172 	call	_EXTI_SetExtIntSensitivity
      000023 85               [ 2]  173 	popw	x
                                    174 ;	Source/User/main.c: 41: GPIO_Init(GPIOD,GPIO_PIN_2,GPIO_MODE_IN_FL_IT);
      000024 4B 20            [ 1]  175 	push	#0x20
      000026 4B 04            [ 1]  176 	push	#0x04
      000028 4B 0F            [ 1]  177 	push	#0x0f
      00002A 4B 50            [ 1]  178 	push	#0x50
      00002C CDr00r00         [ 4]  179 	call	_GPIO_Init
      00002F 5B 04            [ 2]  180 	addw	sp, #4
                                    181 ;	Source/User/main.c: 44: GPIO_Init(GPIOC,GPIO_PIN_3,GPIO_MODE_IN_PU_IT);//GPIO_PIN_3
      000031 4B 60            [ 1]  182 	push	#0x60
      000033 4B 08            [ 1]  183 	push	#0x08
      000035 4B 0A            [ 1]  184 	push	#0x0a
      000037 4B 50            [ 1]  185 	push	#0x50
      000039 CDr00r00         [ 4]  186 	call	_GPIO_Init
      00003C 5B 04            [ 2]  187 	addw	sp, #4
                                    188 ;	Source/User/main.c: 45: EXTI_SetExtIntSensitivity(EXTI_PORT_GPIOC,EXTI_SENSITIVITY_FALL_ONLY);
      00003E 4B 02            [ 1]  189 	push	#0x02
      000040 4B 02            [ 1]  190 	push	#0x02
      000042 CDr00r00         [ 4]  191 	call	_EXTI_SetExtIntSensitivity
      000045 85               [ 2]  192 	popw	x
                                    193 ;	Source/User/main.c: 46: rim();
      000046 9A               [ 1]  194 	rim
                                    195 ;	Source/User/main.c: 48: GPS_Init();//PD5 PD6
      000047 CDr00r00         [ 4]  196 	call	_GPS_Init
                                    197 ;	Source/User/main.c: 50: NIXIE_Init();//PC5 PC6 PC7
      00004A CDr00r00         [ 4]  198 	call	_NIXIE_Init
                                    199 ;	Source/User/main.c: 51: ir_delay=DELAY_10S;
      00004D AE 09 C4         [ 2]  200 	ldw	x, #0x09c4
      000050 CFu00u00         [ 2]  201 	ldw	_ir_delay+0, x
                                    202 ;	Source/User/main.c: 53: DS3231_Init();
      000053 CDr00r00         [ 4]  203 	call	_DS3231_Init
                                    204 ;	Source/User/main.c: 56: TIM4_TimeBaseInit(TIM4_PRESCALER_128,250);//4ms
      000056 4B FA            [ 1]  205 	push	#0xfa
      000058 4B 07            [ 1]  206 	push	#0x07
      00005A CDr00r00         [ 4]  207 	call	_TIM4_TimeBaseInit
      00005D 85               [ 2]  208 	popw	x
                                    209 ;	Source/User/main.c: 57: TIM4_ITConfig(TIM4_IT_UPDATE,ENABLE);
      00005E 4B 01            [ 1]  210 	push	#0x01
      000060 4B 01            [ 1]  211 	push	#0x01
      000062 CDr00r00         [ 4]  212 	call	_TIM4_ITConfig
      000065 85               [ 2]  213 	popw	x
                                    214 ;	Source/User/main.c: 58: TIM4_ARRPreloadConfig(ENABLE);
      000066 4B 01            [ 1]  215 	push	#0x01
      000068 CDr00r00         [ 4]  216 	call	_TIM4_ARRPreloadConfig
      00006B 84               [ 1]  217 	pop	a
                                    218 ;	Source/User/main.c: 59: ITC_SetSoftwarePriority(ITC_IRQ_TIM4_OVF,ITC_PRIORITYLEVEL_1);
      00006C 4B 01            [ 1]  219 	push	#0x01
      00006E 4B 17            [ 1]  220 	push	#0x17
      000070 CDr00r00         [ 4]  221 	call	_ITC_SetSoftwarePriority
      000073 85               [ 2]  222 	popw	x
                                    223 ;	Source/User/main.c: 60: TIM4_Cmd(ENABLE);
      000074 4B 01            [ 1]  224 	push	#0x01
      000076 CDr00r00         [ 4]  225 	call	_TIM4_Cmd
      000079 84               [ 1]  226 	pop	a
                                    227 ;	Source/User/main.c: 65: while(1)
      00007A                        228 00105$:
                                    229 ;	Source/User/main.c: 69: NIXIE_DisplayTime(DS3231_TimeSturcture.hours,DS3231_TimeSturcture.minutes);
      00007A AEr00r01         [ 2]  230 	ldw	x, #(_DS3231_TimeSturcture + 0)+1
      00007D 1F 01            [ 2]  231 	ldw	(0x01, sp), x
      00007F F6               [ 1]  232 	ld	a, (x)
      000080 97               [ 1]  233 	ld	xl, a
      000081 C6u00u02         [ 1]  234 	ld	a, _DS3231_TimeSturcture+2
      000084 89               [ 2]  235 	pushw	x
      000085 5B 01            [ 2]  236 	addw	sp, #1
      000087 88               [ 1]  237 	push	a
      000088 CDr00r00         [ 4]  238 	call	_NIXIE_DisplayTime
      00008B 85               [ 2]  239 	popw	x
                                    240 ;	Source/User/main.c: 70: DS3231_GetTime();
      00008C CDr00r00         [ 4]  241 	call	_DS3231_GetTime
                                    242 ;	Source/User/main.c: 72: if((DS3231_TimeSturcture.minutes%10==0)&&(DS3231_TimeSturcture.seconds==0))
      00008F 1E 01            [ 2]  243 	ldw	x, (0x01, sp)
      000091 F6               [ 1]  244 	ld	a, (x)
      000092 5F               [ 1]  245 	clrw	x
      000093 97               [ 1]  246 	ld	xl, a
      000094 4B 0A            [ 1]  247 	push	#0x0a
      000096 4B 00            [ 1]  248 	push	#0x00
      000098 89               [ 2]  249 	pushw	x
      000099 CDr00r00         [ 4]  250 	call	__modsint
      00009C 5B 04            [ 2]  251 	addw	sp, #4
      00009E 5D               [ 2]  252 	tnzw	x
      00009F 26 D9            [ 1]  253 	jrne	00105$
      0000A1 C6u00u00         [ 1]  254 	ld	a, _DS3231_TimeSturcture+0
      0000A4 26 D4            [ 1]  255 	jrne	00105$
                                    256 ;	Source/User/main.c: 73: ir_delay=DELAY_10S;
      0000A6 AE 09 C4         [ 2]  257 	ldw	x, #0x09c4
      0000A9 CFu00u00         [ 2]  258 	ldw	_ir_delay+0, x
      0000AC 20 CC            [ 2]  259 	jra	00105$
                                    260 ;	Source/User/main.c: 76: }
      0000AE 5B 02            [ 2]  261 	addw	sp, #2
      0000B0 81               [ 4]  262 	ret
                                    263 ;	Source/User/main.c: 85: void TIM4_UPD_OVF_IRQHandler(void) __interrupt(23)
                                    264 ;	-----------------------------------------
                                    265 ;	 function TIM4_UPD_OVF_IRQHandler
                                    266 ;	-----------------------------------------
      0000B1                        267 _TIM4_UPD_OVF_IRQHandler:
      0000B1 62               [ 2]  268 	div	x, a
                                    269 ;	Source/User/main.c: 88: if(TIM4_GetITStatus(TIM4_IT_UPDATE)==SET)
      0000B2 4B 01            [ 1]  270 	push	#0x01
      0000B4 CDr00r00         [ 4]  271 	call	_TIM4_GetITStatus
      0000B7 5B 01            [ 2]  272 	addw	sp, #1
      0000B9 4A               [ 1]  273 	dec	a
      0000BA 26 2C            [ 1]  274 	jrne	00110$
                                    275 ;	Source/User/main.c: 99: if(ir_double_click_delay>0)//双击计时
      0000BC 72 5Du00u02      [ 1]  276 	tnz	_ir_double_click_delay+0
      0000C0 27 04            [ 1]  277 	jreq	00102$
                                    278 ;	Source/User/main.c: 100: --ir_double_click_delay;
      0000C2 72 5Au00u02      [ 1]  279 	dec	_ir_double_click_delay+0
      0000C6                        280 00102$:
                                    281 ;	Source/User/main.c: 106: if(ir_delay>0)
                                    282 ;	Source/User/main.c: 108: --ir_delay;
      0000C6 CEu00u00         [ 2]  283 	ldw	x, _ir_delay+0
      0000C9 27 08            [ 1]  284 	jreq	00104$
      0000CB 5A               [ 2]  285 	decw	x
      0000CC CFu00u00         [ 2]  286 	ldw	_ir_delay+0, x
                                    287 ;	Source/User/main.c: 109: tube_state=ENABLE;
      0000CF 35 01u00u00      [ 1]  288 	mov	_tube_state+0, #0x01
      0000D3                        289 00104$:
                                    290 ;	Source/User/main.c: 111: if((ir_delay==0)&&(nixie_always_on==RESET))
      0000D3 CEu00u00         [ 2]  291 	ldw	x, _ir_delay+0
      0000D6 26 0A            [ 1]  292 	jrne	00106$
      0000D8 72 5Du00u00      [ 1]  293 	tnz	_nixie_always_on+0
      0000DC 26 04            [ 1]  294 	jrne	00106$
                                    295 ;	Source/User/main.c: 114: tube_state=DISABLE;
      0000DE 72 5Fu00u00      [ 1]  296 	clr	_tube_state+0
      0000E2                        297 00106$:
                                    298 ;	Source/User/main.c: 117: TIM4_ClearITPendingBit(TIM4_IT_UPDATE);
      0000E2 4B 01            [ 1]  299 	push	#0x01
      0000E4 CDr00r00         [ 4]  300 	call	_TIM4_ClearITPendingBit
      0000E7 84               [ 1]  301 	pop	a
      0000E8                        302 00110$:
                                    303 ;	Source/User/main.c: 119: }
      0000E8 80               [11]  304 	iret
                                    305 ;	Source/User/main.c: 126: void EXTI_PORTA_IRQHandler(void) __interrupt(3)
                                    306 ;	-----------------------------------------
                                    307 ;	 function EXTI_PORTA_IRQHandler
                                    308 ;	-----------------------------------------
      0000E9                        309 _EXTI_PORTA_IRQHandler:
                                    310 ;	Source/User/main.c: 175: }
      0000E9 80               [11]  311 	iret
                                    312 ;	Source/User/main.c: 182: void EXTI_PORTC_IRQHandler(void) __interrupt(5)
                                    313 ;	-----------------------------------------
                                    314 ;	 function EXTI_PORTC_IRQHandler
                                    315 ;	-----------------------------------------
      0000EA                        316 _EXTI_PORTC_IRQHandler:
      0000EA 62               [ 2]  317 	div	x, a
                                    318 ;	Source/User/main.c: 184: if(GPIO_ReadInputPin(GPIOC,GPIO_PIN_3)==RESET)
      0000EB 4B 08            [ 1]  319 	push	#0x08
      0000ED 4B 0A            [ 1]  320 	push	#0x0a
      0000EF 4B 50            [ 1]  321 	push	#0x50
      0000F1 CDr00r00         [ 4]  322 	call	_GPIO_ReadInputPin
      0000F4 5B 03            [ 2]  323 	addw	sp, #3
      0000F6 4D               [ 1]  324 	tnz	a
      0000F7 26 08            [ 1]  325 	jrne	00104$
                                    326 ;	Source/User/main.c: 187: key_delay_2s=DELAY_2S;
      0000F9 AE 01 F4         [ 2]  327 	ldw	x, #0x01f4
      0000FC CFu00u03         [ 2]  328 	ldw	_key_delay_2s+0, x
      0000FF 20 14            [ 2]  329 	jra	00106$
      000101                        330 00104$:
                                    331 ;	Source/User/main.c: 189: else if(GPIO_ReadInputPin(GPIOC,GPIO_PIN_4)==RESET)
      000101 4B 10            [ 1]  332 	push	#0x10
      000103 4B 0A            [ 1]  333 	push	#0x0a
      000105 4B 50            [ 1]  334 	push	#0x50
      000107 CDr00r00         [ 4]  335 	call	_GPIO_ReadInputPin
      00010A 5B 03            [ 2]  336 	addw	sp, #3
      00010C 4D               [ 1]  337 	tnz	a
      00010D 26 06            [ 1]  338 	jrne	00106$
                                    339 ;	Source/User/main.c: 192: key_delay_2s=DELAY_2S;
      00010F AE 01 F4         [ 2]  340 	ldw	x, #0x01f4
      000112 CFu00u03         [ 2]  341 	ldw	_key_delay_2s+0, x
      000115                        342 00106$:
                                    343 ;	Source/User/main.c: 194: }
      000115 80               [11]  344 	iret
                                    345 ;	Source/User/main.c: 201: void EXTI_PORTD_IRQHandler(void) __interrupt(6)
                                    346 ;	-----------------------------------------
                                    347 ;	 function EXTI_PORTD_IRQHandler
                                    348 ;	-----------------------------------------
      000116                        349 _EXTI_PORTD_IRQHandler:
      000116 62               [ 2]  350 	div	x, a
                                    351 ;	Source/User/main.c: 203: if(GPIO_ReadInputPin(GPIOD,GPIO_PIN_2)==RESET)
      000117 4B 04            [ 1]  352 	push	#0x04
      000119 4B 0F            [ 1]  353 	push	#0x0f
      00011B 4B 50            [ 1]  354 	push	#0x50
      00011D CDr00r00         [ 4]  355 	call	_GPIO_ReadInputPin
      000120 5B 03            [ 2]  356 	addw	sp, #3
      000122 4D               [ 1]  357 	tnz	a
      000123 26 20            [ 1]  358 	jrne	00107$
                                    359 ;	Source/User/main.c: 206: tube_state=ENABLE;
      000125 35 01u00u00      [ 1]  360 	mov	_tube_state+0, #0x01
                                    361 ;	Source/User/main.c: 208: ir_delay=DELAY_10S;
      000129 AE 09 C4         [ 2]  362 	ldw	x, #0x09c4
      00012C CFu00u00         [ 2]  363 	ldw	_ir_delay+0, x
                                    364 ;	Source/User/main.c: 209: if(ir_double_click_delay>0)//相当于20ms内又触发了红外
      00012F 72 5Du00u02      [ 1]  365 	tnz	_ir_double_click_delay+0
      000133 27 0A            [ 1]  366 	jreq	00102$
                                    367 ;	Source/User/main.c: 211: nixie_always_on=~nixie_always_on;
      000135 72 53u00u00      [ 1]  368 	cpl	_nixie_always_on+0
                                    369 ;	Source/User/main.c: 212: ir_double_click_delay=0;
      000139 72 5Fu00u02      [ 1]  370 	clr	_ir_double_click_delay+0
      00013D 20 11            [ 2]  371 	jra	00109$
      00013F                        372 00102$:
                                    373 ;	Source/User/main.c: 215: ir_double_click_delay=DELAY_2S;
      00013F 35 F4u00u02      [ 1]  374 	mov	_ir_double_click_delay+0, #0xf4
      000143 20 0B            [ 2]  375 	jra	00109$
      000145                        376 00107$:
                                    377 ;	Source/User/main.c: 217: else if(GPIO_ReadInputPin(GPIOD,GPIO_PIN_3)==RESET)//key1
      000145 4B 08            [ 1]  378 	push	#0x08
      000147 4B 0F            [ 1]  379 	push	#0x0f
      000149 4B 50            [ 1]  380 	push	#0x50
      00014B CDr00r00         [ 4]  381 	call	_GPIO_ReadInputPin
      00014E 5B 03            [ 2]  382 	addw	sp, #3
      000150                        383 00109$:
                                    384 ;	Source/User/main.c: 244: }
      000150 80               [11]  385 	iret
                                    386 	.area CODE
                                    387 	.area CONST
                                    388 	.area INITIALIZER
      000000                        389 __xinit__nixie_always_on:
      000000 00                     390 	.db #0x00	; 0
      000001                        391 __xinit__KEY_StateMachine_Enumeration:
      000001 00                     392 	.db #0x00	; 0
                                    393 	.area CABS (ABS)
